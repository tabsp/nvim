- repo: joshdick/onedark.vim
  name: onedark

- repo: kyazdani42/nvim-web-devicons

- repo: norcalli/nvim-colorizer.lua
  hook_source: |
    lua << EOF
      require 'colorizer'.setup()
    EOF

- repo: glepnir/galaxyline.nvim

- repo: mhinz/vim-signify
  on_event: [BufReadPre,BufNewFile]
  hook_source: |-
    let g:signify_sign_add = '▋'
    let g:signify_sign_change = '▋'
    let g:signify_sign_delete = '▋'
    let g:signify_sign_delete_first_line = '▘'
    let g:signify_sign_show_count = 0

- repo: Shougo/defx.nvim
  hook_add: |
    call defx#custom#option('_', {
    \ 'winwidth': 30,
    \ 'split': 'vertical',
    \ 'direction': 'topleft',
    \ 'show_ignored_files': 0,
    \ 'buffer_name': '',
    \ 'toggle': 1,
    \ 'root_marker': '≡ ',
    \ 'columns': 'indent:git:icons:filename',
    \ 'resume': 1
    \ })
    call defx#custom#column('git', 'indicators', {
    \ 'Modified'  : '•',
    \ 'Staged'    : '✚',
    \ 'Untracked' : 'ᵁ',
    \ 'Renamed'   : '≫',
    \ 'Unmerged'  : '≠',
    \ 'Ignored'   : 'ⁱ',
    \ 'Deleted'   : '✖',
    \ 'Unknown'   : '⁇'
    \ })
    call defx#custom#column('mark', { 'readonly_icon': '', 'selected_icon': '' })
    call defx#custom#column('filename', { 'root_marker_highlight': 'Comment' })

    let g:defx_icons_column_length = 1
    let g:defx_icons_mark_icon = ''

    autocmd FileType defx call s:defx_my_settings()
    function! s:defx_my_settings() abort
      nnoremap <silent><buffer><expr> <CR> defx#do_action('multi', ['drop'])
      nnoremap <silent><buffer><expr> c defx#do_action('copy')
      nnoremap <silent><buffer><expr> m defx#do_action('move')
      nnoremap <silent><buffer><expr> p defx#do_action('paste')
      nnoremap <silent><buffer><expr> l defx#is_directory() ? defx#do_action('open_tree', 'toggle') : defx#do_action('multi', ['drop'])
      nnoremap <silent><buffer><expr> E defx#do_action('open', 'vsplit')
      nnoremap <silent><buffer><expr> P defx#do_action('preview')
      nnoremap <silent><buffer><expr> o defx#do_action('open_tree', 'toggle')
      nnoremap <silent><buffer><expr> K defx#do_action('new_directory')
      nnoremap <silent><buffer><expr> N defx#do_action('new_file')
      nnoremap <silent><buffer><expr> M defx#do_action('new_multiple_files')
      nnoremap <silent><buffer><expr> C defx#do_action('toggle_columns', 'mark:indent:icon:filename:type:size:time')
      nnoremap <silent><buffer><expr> S defx#do_action('toggle_sort', 'time')
      nnoremap <silent><buffer><expr> d defx#do_action('remove')
      nnoremap <silent><buffer><expr> r defx#do_action('rename')
      nnoremap <silent><buffer><expr> ! defx#do_action('execute_command')
      nnoremap <silent><buffer><expr> x defx#do_action('execute_system')
      nnoremap <silent><buffer><expr> yy defx#do_action('yank_path')
      nnoremap <silent><buffer><expr> . defx#do_action('toggle_ignored_files')
      nnoremap <silent><buffer><expr> ; defx#do_action('repeat')
      nnoremap <silent><buffer><expr> h defx#do_action('cd', ['..'])
      nnoremap <silent><buffer><expr> ~ defx#do_action('cd')
      nnoremap <silent><buffer><expr> q defx#do_action('quit')
      nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'
      nnoremap <silent><buffer><expr> * defx#do_action('toggle_select_all')
      nnoremap <silent><buffer><expr> j line('.') == line('$') ? 'gg' : 'j'
      nnoremap <silent><buffer><expr> k line('.') == 1 ? 'G' : 'k'
      nnoremap <silent><buffer><expr> R defx#do_action('redraw')
      nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')
      nnoremap <silent><buffer><expr> cd defx#do_action('change_vim_cwd')
    endfunction

- repo: kristijanhusak/defx-icons
- repo: kristijanhusak/defx-git

- repo: nvim-treesitter/nvim-treesitter
  on_event: BufRead
  hook_source: |
    lua <<EOF
    require'nvim-treesitter.configs'.setup {
        highlight = {
          enable = true,
        },
        indent = {
          enable = true,
        },
        ensure_installed = {
          'bash',
          'c',
          'cpp',
          'css',
          'go',
          'html',
          'java',
          'javascript',
          'json',
          'lua',
          'python',
          'typescript',
        }
    }
    EOF

- repo: itchyny/vim-cursorword
  on_event: [BufReadPre,BufNewFile]
  hook_source: |
    augroup user_plugin_cursorword
      autocmd!
      autocmd FileType defx,denite,fern,clap,vista let b:cursorword = 0
      autocmd WinEnter * if &diff || &pvw | let b:cursorword = 0 | endif
      autocmd InsertEnter * let b:cursorword = 0
      autocmd InsertLeave * let b:cursorword = 1
    augroup END
